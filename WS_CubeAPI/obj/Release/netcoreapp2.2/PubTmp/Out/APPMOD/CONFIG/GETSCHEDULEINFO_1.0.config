--GETSCHEDULEINFO_1.0
DECLARE @RELATIVEFOR TINYINT,@RELATIVEOPTION TINYINT,@RELATIVEOPTIONTYPE TINYINT,@PREVIOUSVALUE SMALLINT,@TILLDATE TINYINT,@REPORTID INT
DECLARE @STARTDATE DATETIME,@ENDDATE DATETIME,@STARTWEEKDAY INT


IF EXISTS (SELECT 1 FROM SCHEDULE WHERE SCHEDULEID=@SCHEDULEID AND STATUS=1)
BEGIN
SELECT @REPORTID =REPORTID FROM SCHEDULE WHERE SCHEDULEID=@SCHEDULEID

IF @REPORTID =19 AND EXISTS(SELECT 1 FROM SCHEDULEASSIGNMENTS WHERE SCHEDULEID=@SCHEDULEID AND OPTIONID =45)
SELECT @STARTWEEKDAY = CAST(OPTIONVALUE AS INT) FROM SCHEDULEASSIGNMENTS WHERE SCHEDULEID=@SCHEDULEID AND OPTIONID =45
ELSE IF @REPORTID =19
SELECT @STARTWEEKDAY=CAST(OPTIONVALUE AS INT) FROM COMPANYOPTIONS WHERE OPTIONNAME='WeekStartDay'


SELECT @RELATIVEFOR=RELATIVEFOR,@RELATIVEOPTION=RELATIVEOPTION,@RELATIVEOPTIONTYPE=RELATIVEOPTIONTYPE,@PREVIOUSVALUE=PREVIOUSVALUE,@TILLDATE=TILLDATE
,@STARTDATE=STARTDATE,@ENDDATE=ENDDATE
FROM SCHEDULEOPTIONS WHERE SCHEDULEID=@SCHEDULEID

IF @RELATIVEFOR = 0
BEGIN
SET @STARTDATE=@STARTDATE
SET @ENDDATE=GETUTCDATE()
END
ELSE --IF @RELATIVEFOR = 1
BEGIN
--RELATIVEFOR=1(OBSDATE),RELATIVEOPTION=1(CHOOSEDATE),RELATIVEOPTIONTYPE=1(WEEK)
IF @RELATIVEOPTION = 1
BEGIN
IF @RELATIVEOPTIONTYPE =1
BEGIN
IF @REPORTID=19
BEGIN
SET @STARTDATE=CAST(DATEADD(DD, ((DATEPART(DW,GETUTCDATE()) + @@DATEFIRST - (@STARTWEEKDAY-1) + 13) % 7) * -1, GETUTCDATE()) AS DATETIME)
SET @ENDDATE=GETUTCDATE()
END
ELSE
BEGIN
SET @STARTDATE=DATEADD(wk, DATEDIFF(wk, 6, GETUTCDATE()), 6)
SET @ENDDATE=DATEADD(DD,6,@STARTDATE)
END
END
ELSE IF @RELATIVEOPTIONTYPE =2
BEGIN
SELECT @STARTDATE=CONVERT(DATETIME,CONVERT(VARCHAR(25),DATEADD(dd,-(DAY(GETUTCDATE())-1),GETUTCDATE()),101)),
@ENDDATE=CONVERT(DATETIME,CONVERT(VARCHAR(25),DATEADD(dd,-(DAY(DATEADD(mm,1,GETUTCDATE()))),DATEADD(mm,1,GETUTCDATE())),101))
END
ELSE IF @RELATIVEOPTIONTYPE =3
BEGIN
SELECT @STARTDATE=DATEADD(yy, DATEDIFF(yy,0,getdate()), 0),@ENDDATE=DATEADD(yy, DATEDIFF(yy,0,getdate()) + 1, -1)
END
END
ELSE IF @RELATIVEOPTION = 2
BEGIN
IF @RELATIVEOPTIONTYPE =1
BEGIN
IF @REPORTID=19
BEGIN
IF ISNULL(@PREVIOUSVALUE,0) = 0
BEGIN
SET @STARTDATE=CAST(DATEADD(DD, ((DATEPART(DW,GETUTCDATE()) + @@DATEFIRST - (@STARTWEEKDAY-1) + 13) % 7) * -1, GETUTCDATE()) AS DATETIME)
SET @ENDDATE=GETUTCDATE()
END
ELSE
BEGIN
SET @STARTDATE=CAST(DATEADD(DD, ((DATEPART(DW,GETUTCDATE()) + @@DATEFIRST - (@STARTWEEKDAY-1) + 13) % 7) * -1, GETUTCDATE()) AS DATETIME)

IF @TILLDATE=0
SET @ENDDATE=DATEADD(DD,-1,@STARTDATE)
ELSE
SET @ENDDATE=GETDATE()

SET @STARTDATE=DATEADD(DD,(-7*@PREVIOUSVALUE),@STARTDATE)
END
END
ELSE
BEGIN
IF @PREVIOUSVALUE = 0
BEGIN
SET @STARTDATE=DATEADD(wk, DATEDIFF(wk, 6, GETUTCDATE()), 6)
SET @ENDDATE=DATEADD(DD,6,@STARTDATE)
END
ELSE
SELECT @STARTDATE=DATEADD(DD,-((@PREVIOUSVALUE*7)-1),DATEADD(wk, DATEDIFF(wk, 6, GETUTCDATE()), 5)),
@ENDDATE=CASE WHEN @TILLDATE=0 THEN DATEADD(wk, DATEDIFF(wk, 6, GETUTCDATE()), 5) WHEN @TILLDATE=1 THEN GETUTCDATE() END
END

END
ELSE IF @RELATIVEOPTIONTYPE =2
BEGIN
IF @PREVIOUSVALUE = 0
SELECT @STARTDATE=CONVERT(DATETIME,CONVERT(VARCHAR(25),DATEADD(dd,-(DAY(GETUTCDATE())-1),GETUTCDATE()),101)),
@ENDDATE=CONVERT(DATETIME,CONVERT(VARCHAR(25),DATEADD(dd,-(DAY(DATEADD(mm,1,GETUTCDATE()))),DATEADD(mm,1,GETUTCDATE())),101))
ELSE
SELECT @STARTDATE=CAST(MONTH(DATEADD(MM,(@PREVIOUSVALUE*-1),GETDATE())) AS VARCHAR(10) )+'/01/'+CAST(YEAR(DATEADD(MM,(@PREVIOUSVALUE*-1),GETUTCDATE())) AS VARCHAR(10))
,@ENDDATE=CASE WHEN @TILLDATE=0 THEN DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE()),0)) WHEN @TILLDATE=1 THEN GETUTCDATE() END
END
ELSE IF @RELATIVEOPTIONTYPE =3
BEGIN
IF @PREVIOUSVALUE = 0
SELECT @STARTDATE=DATEADD(yy, DATEDIFF(yy,0,getdate()), 0),@ENDDATE=DATEADD(yy, DATEDIFF(yy,0,getdate()) + 1, -1)
ELSE
SELECT @STARTDATE=CONVERT(DATETIME,'01/01/'+CAST(YEAR(DATEADD(YY,(@PREVIOUSVALUE*-1),GETUTCDATE())) AS VARCHAR(10))),
@ENDDATE=CASE WHEN @TILLDATE=0 THEN CONVERT(DATETIME,'12/31/'+CAST(YEAR(DATEADD(YY,-1,GETUTCDATE())) AS VARCHAR(10))) WHEN @TILLDATE=1 THEN GETUTCDATE() END
END
END
END

--UPDATE  SCHEDULEOPTIONS SET STARTDATE=@STARTDATE,ENDDATE=@ENDDATE WHERE SCHEDULEID=@SCHEDULEID


DECLARE @REPORTPARAM VARCHAR(MAX)
SET @REPORTPARAM=''
SELECT @REPORTPARAM=@REPORTPARAM+ (CASE WHEN R.ID = 1 THEN ';'+REPORTPARAM+'='+CAST(OPTIONVALUE AS VARCHAR(8)) ELSE ','+CAST(OPTIONVALUE AS VARCHAR(8)) END) FROM
(SELECT ROW_NUMBER() OVER (PARTITION BY REPORTPARAM ORDER BY REPORTPARAM) ID,RO.REPORTPARAM,SA.OPTIONVALUE
FROM SCHEDULEASSIGNMENTS SA
INNER JOIN REPORTOPTIONSMASTER RO ON RO.OPTIONID = SA.OPTIONID
WHERE SCHEDULEID = @SCHEDULEID) R

SELECT S.COMPANYID,S.SCHEDULEID,RMD.QUERYVALUE,RMD.ISQUERY,RMD.DESIGNID,RMD.RPTDESIGN,R.REPORTNAME,RMD.RPTNAME,ISNULL(S.UPDATEDBY,S.CREATEDBY) USERID,L.INTERNALNAME LANGUAGECODE,
L.LANGUAGEID,@REPORTPARAM REPORTPARAM,S.REPORTID,
(SELECT OPTIONVALUE FROM COMPANYOPTIONS WHERE OPTIONNAME='URL') URL,
(SELECT OPTIONVALUE FROM COMPANYOPTIONS WHERE OPTIONNAME='MAILFROM') MAILFROM,
S.REPLYTO,
S.CC,S.SUBJECT,
CONVERT(VARCHAR(32),@STARTDATE,101)+' - '+CONVERT(VARCHAR(32),@ENDDATE,101)DATE
,CASE UI.DATEFORMAT WHEN 101 THEN 'MM/dd/yyyy' WHEN 103 THEN 'dd/MM/yyyy' WHEN 111 THEN 'yyyy/MM/dd' END DATEFORMAT
,CASE S.EXPORTTYPE WHEN 1 THEN 'PDF' WHEN 2 THEN 'XLS' WHEN 3 THEN 'XLSX' END EXPORTTYPE
,EXPORTFORMAT
,SO.RELATIVEFOR
,SO.RELATIVEFOR
,SO.STARTDATE
,SO.ENDDATE
,SO.DWM
,SO.EVERYDWM
,SO.DAY
,SO.MONTH
,S.STATUS
,CASE WHEN SO.DWM=1 THEN dbo.[USERTIMEEMAIL](DATEADD(MM,1,GETUTCDATE()),SO.STARTTIME,SO.TIMEZONEDURATION) ELSE dbo.[USERTIMEEMAIL](GETUTCDATE(),SO.STARTTIME,SO.TIMEZONEDURATION) END [TOCKENTOBESENTDATE]
,SO.STARTTIME
,T.DURATION [TIMEZONE]
,(SELECT OPTIONVALUE FROM COMPANYOPTIONS WHERE OPTIONNAME ='CustomColor') CUSTOMCOLOR
,(SELECT OPTIONVALUE FROM COMPANYOPTIONS WHERE OPTIONNAME ='CustomFont') CUSTOMFONT
,(SELECT OPTIONVALUE FROM COMPANYOPTIONS WHERE OPTIONNAME ='URL') URL
,(SELECT OPTIONVALUE FROM COMPANYOPTIONS WHERE OPTIONNAME ='ENABLESUBAREAS') ENABLESUBAREAS
FROM SCHEDULE S
INNER JOIN SCHEDULEOPTIONS SO ON SO.SCHEDULEID = S.SCHEDULEID
INNER JOIN REPORTSMASTERDESIGN RMD ON RMD.REPORTID=S.REPORTID AND RMD.DESIGNID=S.DESIGNID
INNER JOIN REPORTSMASTER R ON R.REPORTID=S.REPORTID
INNER JOIN USERINFO UI ON UI.USERID=ISNULL(S.UPDATEDBY,S.CREATEDBY)
INNER JOIN USERS U ON U.USERID = UI.USERID
INNER JOIN LANGUAGES L ON L.LANGUAGEID = UI.LANGUAGEID
INNER JOIN TIMEZONES T ON T.TIMEZONEID=SO.TIMEZONE
WHERE S.SCHEDULEID =@SCHEDULEID

DECLARE @EMAILTO VARCHAR(4000),@BODY NVARCHAR(MAX)
SET @EMAILTO =''
SET @BODY=''
SELECT @EMAILTO=EMAILTO,@BODY=BODY FROM SCHEDULE WHERE SCHEDULEID = @SCHEDULEID

DECLARE @RES TABLE(USERID INT,EMAIL NVARCHAR(512),BODY NVARCHAR(MAX))

BEGIN TRY
INSERT INTO @RES
SELECT DISTINCT U.USERID,U.EMAIL,DBO.REGEXREPLACE(@BODY,'02|03',U.LASTNAME+'|'+U.FIRSTNAME) BODY FROM DBO.CSVTOTABLE(@EMAILTO)E
INNER JOIN USERS  U ON U.USERID = E.RESULT
WHERE STATUS !=2
END TRY
BEGIN CATCH
INSERT INTO @RES
SELECT DISTINCT U.USERID,U.EMAIL,LASTNAME+', '+FIRSTNAME BODY FROM DBO.CSVTOTABLE(@EMAILTO)E
INNER JOIN USERS  U ON U.USERID = E.RESULT
WHERE STATUS !=2
END CATCH

SELECT USERID,EMAIL,BODY FROM @RES WHERE LEN(EMAIL)>0

END