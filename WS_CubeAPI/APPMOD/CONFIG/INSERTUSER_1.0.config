--INSERTUSER_1.0

IF ((SELECT OPTIONVALUE FROM COMPANYOPTIONS WHERE OPTIONNAME='ObsApprovePC')='0' AND (SELECT OPTIONVALUE FROM COMPANYOPTIONS WHERE OPTIONNAME='ObsApproveMobile')='0')
BEGIN
IF @DEFAULTROLEID IN (1,2) OR EXISTS(SELECT 1 FROM ROLES WHERE ROLEID=@DEFAULTROLEID AND COPYFROM IN (1,2))
SET @APPROVEOFFLINE=1
ELSE IF @DEFAULTROLEID NOT IN (1,2)
SET @APPROVEOFFLINE=0
END

DECLARE @CC_TIMESTAMP DATETIME
SET @CC_TIMESTAMP=GETDATE()

DECLARE @COUSERSCOUNT INT,@RANDOMPWD NVARCHAR(16)
SET @RANDOMPWD=''
SELECT @RANDOMPWD=dbo.GETRANDOMPASSWORD()

SELECT @COUSERSCOUNT=CASE WHEN OPTIONVALUE ='' THEN 0 ELSE CAST(OPTIONVALUE AS INT) END FROM COMPANYOPTIONS WHERE OPTIONNAME='MaxUserCount'
DECLARE @USERID INT
IF (SELECT COUNT(*) FROM USERS WHERE USERID IN(SELECT USERID FROM USERINFO WHERE USERTYPEID!=1) AND STATUS NOT IN(2,3)) >= @COUSERSCOUNT AND @USERTYPEID!=1
SELECT -4
ELSE IF EXISTS(SELECT 1 FROM USERS WHERE USERNAME =@USERNAME AND STATUS!=2)
SELECT -1
ELSE IF EXISTS(SELECT 1 FROM USERS WHERE EMAIL=@EMAIL AND STATUS!=2 AND @EMAIL!='')
SELECT -3
ELSE
BEGIN
INSERT INTO USERS(COMPANYID,USERNAME,FIRSTNAME,LASTNAME,EMAIL,[PASSWORD],[STATUS],CREATEDBY,CREATEDDATE)VALUES(@COMPANYID,CASE WHEN @USERTYPEID = 1 THEN NULL ELSE @USERNAME END,@FIRSTNAME,@LASTNAME,@EMAIL,CASE WHEN ISNULL(@PASSWORD,'') ='' THEN DBO.FN40ENCRYPT(@RANDOMPWD) ELSE DBO.FN40ENCRYPT(@PASSWORD) END,@STATUS,@CREATEDBY,@CC_TIMESTAMP);
SELECT @USERID=@@IDENTITY

UPDATE USERS SET USERNAME=CASE WHEN @USERTYPEID = 1 THEN
(CASE WHEN ISNULL(@USERNAME,'') ='' THEN SUBSTRING(@LASTNAME,1,4)+SUBSTRING(@FIRSTNAME,1,1)+CAST(@USERID AS VARCHAR(8)) ELSE @USERNAME END)

ELSE @USERNAME END WHERE USERID = @USERID

INSERT INTO USERINFO(USERID,JOBTITLE,USERTYPEID,LOGINATTEMPTS,PASSWORDLASTUPDATE,LANGUAGEID,TIMEZONE,DATEFORMAT,OFFLINEACCESS,APPROVEOFFLINE,DEFAULTROLEID,DEFAULTSITEID,UPDATEDBY,UPDATEDDATE)VALUES
(@USERID,@JOBTITLE,@USERTYPEID,0,NULL,@LANGUAGEID,(SELECT TIMEZONEID FROM SITES WHERE SITEID=@DEFAULTSITEID),@DATEFORMAT,@OFFLINEACCESS,@APPROVEOFFLINE,@DEFAULTROLEID,@DEFAULTSITEID,@CREATEDBY,@CC_TIMESTAMP)
--USERGROUPS
UPDATE UG SET UG.STATUS = 1, UG.UPDATEDBY = @CREATEDBY, UG.UPDATEDDATE = @CC_TIMESTAMP
FROM USERGROUPS UG
INNER JOIN GROUPS G ON G.GROUPID = UG.GROUPID AND G.GROUPTYPEID = UG.GROUPTYPEID
WHERE UG.[STATUS] = 0 AND UG.USERID =@USERID AND
G.GROUPID IN (SELECT RESULT FROM DBO.CSVtoTable(@GROUPID));

INSERT INTO USERGROUPS(USERID,GROUPTYPEID,GROUPID,STATUS,UPDATEDBY,UPDATEDDATE)
SELECT @USERID,G.GROUPTYPEID,T.RESULT,1,@CREATEDBY,@CC_TIMESTAMP FROM DBO.CSVtoTable(@GROUPID) T
INNER JOIN GROUPS G ON G.GROUPID = T.RESULT
WHERE RESULT NOT IN (SELECT GROUPID FROM USERGROUPS WHERE USERID =@USERID);

UPDATE USERGROUPS SET STATUS = 0,UPDATEDBY = @CREATEDBY,UPDATEDDATE = @CC_TIMESTAMP
WHERE USERID =@USERID AND GROUPID NOT IN (SELECT RESULT FROM DBO.CSVtoTable(@GROUPID))

--ROLES
IF EXISTS(SELECT 1 FROM ROLES WHERE ROLEID IN (SELECT RESULT FROM dbo.CSVtoTable(@ROLEID)) )
IF @ROLEID!=-1
INSERT INTO USERROLES(USERID,ROLEID,[STATUS],UPDATEDBY,UPDATEDDATE)SELECT @USERID,RESULT,1,@CREATEDBY,@CC_TIMESTAMP FROM dbo.CSVtoTable(@ROLEID)
--USERSITES
INSERT INTO USERSITES(USERID,SITEID,[STATUS],UPDATEDBY,UPDATEDDATE)SELECT @USERID,RESULT,1,@CREATEDBY,@CC_TIMESTAMP FROM dbo.CSVtoTable(@SITEID)
--USERLINKS
INSERT INTO USERQUICKLINKS(USERID,ROLEID,PERMISSIONID,STATUS,CREATEDBY,CREATEDDATE)
SELECT TOP 5 @USERID,ROLEID,PERMISSIONID,1,@CREATEDBY,@CC_TIMESTAMP FROM ROLEPERMISSIONS WHERE ROLEID = @DEFAULTROLEID AND PERMISSIONVALUE=1 AND PERMISSIONID NOT IN (36)

--TARGETUSERS
INSERT INTO TARGETUSERS(SITEID,USERID,YEAR,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC,CREATEDBY,CREATEDDATE)
SELECT SITEID,@USERID USERID,YEAR,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC,@CREATEDBY,@CC_TIMESTAMP FROM TARGETSITES WHERE SITEID=@DEFAULTSITEID

INSERT INTO WEEKLYTARGETUSERS(SITEID,USERID,WEEKTARGET,CREATEDBY,CREATEDDATE)
SELECT SITEID,@USERID,WEEKTARGET,@CREATEDBY,@CC_TIMESTAMP FROM WEEKLYTARGETSITES WHERE SITEID=@DEFAULTSITEID

SELECT @USERID
END

INSERT INTO dbo.AUDIT(TABLENAME,TRANS,STAMP,LASTUPDATEDBY,DATA)
SELECT 'USERS/USERGROUPS/USERROLES','INSERT-INSERTUSER_1.0',@CC_TIMESTAMP,@CREATEDBY,
(SELECT * FROM USERS WHERE CREATEDBY=@CREATEDBY AND CREATEDDATE=@CC_TIMESTAMP FOR XML AUTO)

INSERT INTO dbo.AUDIT(TABLENAME,TRANS,STAMP,LASTUPDATEDBY,DATA)
SELECT 'USERS/USERGROUPS/USERROLES','INSERT-INSERTUSER_1.0',@CC_TIMESTAMP,@CREATEDBY,
(SELECT * FROM USERINFO WHERE UPDATEDBY=@CREATEDBY AND UPDATEDDATE=@CC_TIMESTAMP FOR XML AUTO)
